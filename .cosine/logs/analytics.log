
INFO [2023-11-02T10:57:18.765Z]: opened
INFO [2023-11-02T10:57:18.765Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics","token":"1803ee20efed77dfecbf705fb8dc4c18","mp_lib":"node","$lib_version":"0.17.0"}
INFO [2023-11-02T11:29:09.165Z]: extension_initialized
INFO [2023-11-02T11:29:09.165Z]: {"timeToInit":1918,"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics","token":"1803ee20efed77dfecbf705fb8dc4c18","mp_lib":"node","$lib_version":"0.17.0"}
INFO [2023-11-02T11:29:27.402Z]: login
INFO [2023-11-02T11:29:27.402Z]: {"provider":"Github","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics","token":"1803ee20efed77dfecbf705fb8dc4c18","mp_lib":"node","$lib_version":"0.17.0"}
INFO [2023-11-02T11:29:27.420Z]: Set User: elsaghir.youyou99@gmail.com
INFO [2023-11-02T11:29:27.420Z]: {"Telemetry":true}
INFO [2023-11-02T11:29:47.879Z]: project_languages
INFO [2023-11-02T11:29:47.879Z]: {"languages":["TSX"],"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:29:52.328Z]: project_initialize_start
INFO [2023-11-02T11:29:52.328Z]: {"name":"reclaim-ai","languages":["TSX","TypeScript","JSON","Markdown"],"ignored":["*.d.ts","*.min.js",".cache",".changeset",".cosine",".devcontainer",".expo",".expo-settings",".expo-shared",".git",".gitsecret",".husky",".idea",".next",".nyc_output",".parcel-cache",".pnp",".pnp.js",".storybook",".turbo",".versionbot",".vs",".vscode",".yarn",".yarnrc","_generated","build","coverage","dist","logs","node_modules","out"],"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:30:33.114Z]: project_initialize_success
INFO [2023-11-02T11:30:33.114Z]: {"name":"reclaim-ai","languages":["TSX","TypeScript","JSON","Markdown"],"ignored":["*.d.ts","*.min.js",".cache",".changeset",".cosine",".devcontainer",".expo",".expo-settings",".expo-shared",".git",".gitsecret",".husky",".idea",".next",".nyc_output",".parcel-cache",".pnp",".pnp.js",".storybook",".turbo",".versionbot",".vs",".vscode",".yarn",".yarnrc","_generated","build","coverage","dist","logs","node_modules","out"],"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:32:36.174Z]: question_start
INFO [2023-11-02T11:32:36.174Z]: {"prompt":"how can i make it so that when loadevents is loaded, it checks the status of task related to the event, if the task is scheduled, then add 15 minutes, do this for all tasks everytime loadevents is used","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:32:37.604Z]: tool_selected
INFO [2023-11-02T11:32:37.604Z]: {"tool":"ideate","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:33:08.073Z]: question_success
INFO [2023-11-02T11:33:08.073Z]: {"prompt":"how can i make it so that when loadevents is loaded, it checks the status of task related to the event, if the task is scheduled, then add 15 minutes, do this for all tasks everytime loadevents is used","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:42:19.633Z]: question_start
INFO [2023-11-02T11:42:19.633Z]: {"prompt":"export type TaskStatus = \"NEW\" | \"SCHEDULED\" | \"IN_PROGRESS\" | \"COMPLETE\" | \"CANCELLED\" | \"ARCHIVED\";\n\nexport interface Task {\n  id: number;\n  title: string;\n  notes: string;\n  eventCategory: string;\n  eventSubType: string;\n  status: TaskStatus;\n  timeChunksRequired: number;\n  timeChunksSpent: number;\n  timeChunksRemaining: number;\n  minChunkSize: number;\n  maxChunkSize: number;\n  alwaysPrivate: boolean;\n  deleted: boolean;\n  index: number;\n  due: string;\n  created: string;\n  updated: string;\n  finished: string;\n  snoozeUntil: string;\n  adjusted: boolean;\n  atRisk: boolean;\n  priority: string;\n  onDeck: boolean;\n  instances: Array<{\n    taskId: number;\n    eventId: string;\n    eventKey: string;\n    status: string;\n    start: string;\n    end: string;\n    index: number;\n    pinned: boolean;\n  }>;\n  timeSchemeId: string;\n  type: string;\n  recurringAssignmentType: string;\n}\n","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:42:41.743Z]: question_success
INFO [2023-11-02T11:42:41.743Z]: {"prompt":"export type TaskStatus = \"NEW\" | \"SCHEDULED\" | \"IN_PROGRESS\" | \"COMPLETE\" | \"CANCELLED\" | \"ARCHIVED\";\n\nexport interface Task {\n  id: number;\n  title: string;\n  notes: string;\n  eventCategory: string;\n  eventSubType: string;\n  status: TaskStatus;\n  timeChunksRequired: number;\n  timeChunksSpent: number;\n  timeChunksRemaining: number;\n  minChunkSize: number;\n  maxChunkSize: number;\n  alwaysPrivate: boolean;\n  deleted: boolean;\n  index: number;\n  due: string;\n  created: string;\n  updated: string;\n  finished: string;\n  snoozeUntil: string;\n  adjusted: boolean;\n  atRisk: boolean;\n  priority: string;\n  onDeck: boolean;\n  instances: Array<{\n    taskId: number;\n    eventId: string;\n    eventKey: string;\n    status: string;\n    start: string;\n    end: string;\n    index: number;\n    pinned: boolean;\n  }>;\n  timeSchemeId: string;\n  type: string;\n  recurringAssignmentType: string;\n}\n","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:43:20.215Z]: question_start
INFO [2023-11-02T11:43:20.215Z]: {"prompt":"how can i make it so that when loadevents is loaded, it checks the status of task related to the event, if the task is scheduled, then add 15 minutes, do this for all tasks everytime loadevents is used\n\nexport type TaskStatus = \"NEW\" | \"SCHEDULED\" | \"IN_PROGRESS\" | \"COMPLETE\" | \"CANCELLED\" | \"ARCHIVED\";\n\nexport interface Task {\n  id: number;\n  title: string;\n  notes: string;\n  eventCategory: string;\n  eventSubType: string;\n  status: TaskStatus;\n  timeChunksRequired: number;\n  timeChunksSpent: number;\n  timeChunksRemaining: number;\n  minChunkSize: number;\n  maxChunkSize: number;\n  alwaysPrivate: boolean;\n  deleted: boolean;\n  index: number;\n  due: string;\n  created: string;\n  updated: string;\n  finished: string;\n  snoozeUntil: string;\n  adjusted: boolean;\n  atRisk: boolean;\n  priority: string;\n  onDeck: boolean;\n  instances: Array<{\n    taskId: number;\n    eventId: string;\n    eventKey: string;\n    status: string;\n    start: string;\n    end: string;\n    index: number;\n    pinned: boolean;\n  }>;\n  timeSchemeId: string;\n  type: string;\n  recurringAssignmentType: string;\n}\n\n\nexport enum ReclaimEventTypeEnum {\n  USER = \"USER\",\n  SYNC = \"SYNC\",\n  HABITASSIGNMENT = \"HABIT_ASSIGNMENT\",\n  ONEONONEASSIGNMENT = \"ONE_ON_ONE_ASSIGNMENT\",\n  TASKASSIGNMENT = \"TASK_ASSIGNMENT\",\n  CONFBUFFER = \"CONF_BUFFER\",\n  TRAVELBUFFER = \"TRAVEL_BUFFER\",\n  SCHEDULINGLINKMEETING = \"SCHEDULING_LINK_MEETING\",\n  UNKNOWN = \"UNKNOWN\",\n}\n\nexport enum EventResponseStatusEnum {\n  None = \"None\",\n  Organizer = \"Organizer\",\n  Accepted = \"Accepted\",\n  Declined = \"Declined\",\n  TentativelyAccepted = \"TentativelyAccepted\",\n  NotResponded = \"NotResponded\",\n}\n\nexport type EventResponseStatusType = `${EventResponseStatusEnum}`;\n\nexport type ReclaimEventType = `${ReclaimEventTypeEnum}`;\n\nexport enum AssistType {\n  TASK = \"TASK\",\n  CUSTOMDAILY = \"CUSTOM_DAILY\",\n  CATCHUPAM = \"CATCHUP_AM\",\n  CATCHUPPM = \"CATCHUP_PM\",\n  LUNCH = \"LUNCH\",\n  FOCUS = \"FOCUS\",\n  TRAVELPRE = \"TRAVEL_PRE\",\n  TRAVELPOST = \"TRAVEL_POST\",\n  CONBUF = \"CONBUF\",\n}\n\nexport enum AssistStatus {\n  CONTROLLED = \"CONTROLLED\",\n  RELEASED = \"RELEASED\",\n  ARCHIVED = \"ARCHIVED\",\n}\n\nexport enum LockState {\n  MANUALLYLOCKED = \"MANUALLY_LOCKED\",\n  ADJUSTED = \"ADJUSTED\",\n  UPCOMINGWINDOW = \"UPCOMING_WINDOW\",\n  MANUALLYUNLOCKED = \"MANUALLY_UNLOCKED\",\n  DELETED = \"DELETED\",\n  DECLINED = \"DECLINED\",\n  INTHEPAST = \"IN_THE_PAST\",\n}\n\nexport interface AssistPolicyOverride {\n  windowStart: string;\n  idealTime: string;\n  windowEnd: string;\n  durationMin: number;\n  durationMax: number;\n  forceDefend: boolean;\n}\n\nexport enum RecurringAssignmentType {\n  ONEONONE = \"ONE_ON_ONE\",\n  DAILYHABIT = \"DAILY_HABIT\",\n  TASK = \"TASK\",\n}\n\nexport interface AssistDetails {\n  type?: AssistType;\n  customHabit?: boolean;\n  habitOrTask?: boolean;\n  task?: boolean;\n  conferenceBuffer?: boolean;\n  status?: AssistStatus;\n\n  /** The source event id for a travel assist event. */\n  travelNewEventId?: string | null;\n\n  /** The source event id for a conference (decompression time) event. */\n  conferenceEventId?: string | null;\n  lastControlledUpdate?: string;\n  lastControlledHash?: number;\n  defended?: boolean;\n  pinned?: boolean;\n  lockState?: LockState | null;\n  dailyHabitId?: number | null;\n  taskId?: number | null;\n  taskIndex?: number | null;\n  policyOverride?: AssistPolicyOverride | null;\n  lastManualAdjustment?: string;\n  recurringAssignmentType?: RecurringAssignmentType;\n  eventType?: ReclaimEventType;\n  assistReferenceValid?: boolean;\n}\n\nexport interface Event {\n  allocatedTimeChunks: number;\n  assist?: AssistDetails;\n  sourceDetails?: {\n    calendarId: number;\n    eventId: string;\n    etag: string;\n    writable: boolean;\n    eventKey: string;\n    base64Id: string;\n    url: string;\n    title: string;\n  };\n  calendarId: number;\n  category: string;\n  color:\n    | \"NONE\"\n    | \"LAVENDER\"\n    | \"SAGE\"\n    | \"GRAPE\"\n    | \"FLAMINGO\"\n    | \"BANANA\"\n    | \"TANGERINE\"\n    | \"PEACOCK\"\n    | \"GRAPHITE\"\n    | \"BLUEBERRY\"\n    | \"BASIL\"\n    | \"TOMATO\";\n  conferenceCall: boolean;\n  etag: string;\n  eventEnd: string;\n  eventId: string;\n  eventStart: string;\n  free: boolean;\n  key: string;\n  numAttendees: number;\n  onlineMeetingUrl: string;\n  organizer: string;\n  personalSync: boolean;\n  private: boolean;\n  public: boolean;\n  published: boolean;\n  reclaimEventType: string;\n  reclaimManaged: boolean;\n  recurring: boolean;\n  recurringException: boolean;\n  recurringInstance: boolean;\n  requiresTravel: boolean;\n  rsvpStatus: EventResponseStatusType;\n  scoredType: string;\n  status: string;\n  subType: string;\n  timeChunks: number;\n  title: string;\n  titleSeenByOthers: string;\n  type: string;\n  underAssistControl: boolean;\n  updated: string;\n  version: string;\n}\n","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:43:37.085Z]: question_success
INFO [2023-11-02T11:43:37.085Z]: {"prompt":"how can i make it so that when loadevents is loaded, it checks the status of task related to the event, if the task is scheduled, then add 15 minutes, do this for all tasks everytime loadevents is used\n\nexport type TaskStatus = \"NEW\" | \"SCHEDULED\" | \"IN_PROGRESS\" | \"COMPLETE\" | \"CANCELLED\" | \"ARCHIVED\";\n\nexport interface Task {\n  id: number;\n  title: string;\n  notes: string;\n  eventCategory: string;\n  eventSubType: string;\n  status: TaskStatus;\n  timeChunksRequired: number;\n  timeChunksSpent: number;\n  timeChunksRemaining: number;\n  minChunkSize: number;\n  maxChunkSize: number;\n  alwaysPrivate: boolean;\n  deleted: boolean;\n  index: number;\n  due: string;\n  created: string;\n  updated: string;\n  finished: string;\n  snoozeUntil: string;\n  adjusted: boolean;\n  atRisk: boolean;\n  priority: string;\n  onDeck: boolean;\n  instances: Array<{\n    taskId: number;\n    eventId: string;\n    eventKey: string;\n    status: string;\n    start: string;\n    end: string;\n    index: number;\n    pinned: boolean;\n  }>;\n  timeSchemeId: string;\n  type: string;\n  recurringAssignmentType: string;\n}\n\n\nexport enum ReclaimEventTypeEnum {\n  USER = \"USER\",\n  SYNC = \"SYNC\",\n  HABITASSIGNMENT = \"HABIT_ASSIGNMENT\",\n  ONEONONEASSIGNMENT = \"ONE_ON_ONE_ASSIGNMENT\",\n  TASKASSIGNMENT = \"TASK_ASSIGNMENT\",\n  CONFBUFFER = \"CONF_BUFFER\",\n  TRAVELBUFFER = \"TRAVEL_BUFFER\",\n  SCHEDULINGLINKMEETING = \"SCHEDULING_LINK_MEETING\",\n  UNKNOWN = \"UNKNOWN\",\n}\n\nexport enum EventResponseStatusEnum {\n  None = \"None\",\n  Organizer = \"Organizer\",\n  Accepted = \"Accepted\",\n  Declined = \"Declined\",\n  TentativelyAccepted = \"TentativelyAccepted\",\n  NotResponded = \"NotResponded\",\n}\n\nexport type EventResponseStatusType = `${EventResponseStatusEnum}`;\n\nexport type ReclaimEventType = `${ReclaimEventTypeEnum}`;\n\nexport enum AssistType {\n  TASK = \"TASK\",\n  CUSTOMDAILY = \"CUSTOM_DAILY\",\n  CATCHUPAM = \"CATCHUP_AM\",\n  CATCHUPPM = \"CATCHUP_PM\",\n  LUNCH = \"LUNCH\",\n  FOCUS = \"FOCUS\",\n  TRAVELPRE = \"TRAVEL_PRE\",\n  TRAVELPOST = \"TRAVEL_POST\",\n  CONBUF = \"CONBUF\",\n}\n\nexport enum AssistStatus {\n  CONTROLLED = \"CONTROLLED\",\n  RELEASED = \"RELEASED\",\n  ARCHIVED = \"ARCHIVED\",\n}\n\nexport enum LockState {\n  MANUALLYLOCKED = \"MANUALLY_LOCKED\",\n  ADJUSTED = \"ADJUSTED\",\n  UPCOMINGWINDOW = \"UPCOMING_WINDOW\",\n  MANUALLYUNLOCKED = \"MANUALLY_UNLOCKED\",\n  DELETED = \"DELETED\",\n  DECLINED = \"DECLINED\",\n  INTHEPAST = \"IN_THE_PAST\",\n}\n\nexport interface AssistPolicyOverride {\n  windowStart: string;\n  idealTime: string;\n  windowEnd: string;\n  durationMin: number;\n  durationMax: number;\n  forceDefend: boolean;\n}\n\nexport enum RecurringAssignmentType {\n  ONEONONE = \"ONE_ON_ONE\",\n  DAILYHABIT = \"DAILY_HABIT\",\n  TASK = \"TASK\",\n}\n\nexport interface AssistDetails {\n  type?: AssistType;\n  customHabit?: boolean;\n  habitOrTask?: boolean;\n  task?: boolean;\n  conferenceBuffer?: boolean;\n  status?: AssistStatus;\n\n  /** The source event id for a travel assist event. */\n  travelNewEventId?: string | null;\n\n  /** The source event id for a conference (decompression time) event. */\n  conferenceEventId?: string | null;\n  lastControlledUpdate?: string;\n  lastControlledHash?: number;\n  defended?: boolean;\n  pinned?: boolean;\n  lockState?: LockState | null;\n  dailyHabitId?: number | null;\n  taskId?: number | null;\n  taskIndex?: number | null;\n  policyOverride?: AssistPolicyOverride | null;\n  lastManualAdjustment?: string;\n  recurringAssignmentType?: RecurringAssignmentType;\n  eventType?: ReclaimEventType;\n  assistReferenceValid?: boolean;\n}\n\nexport interface Event {\n  allocatedTimeChunks: number;\n  assist?: AssistDetails;\n  sourceDetails?: {\n    calendarId: number;\n    eventId: string;\n    etag: string;\n    writable: boolean;\n    eventKey: string;\n    base64Id: string;\n    url: string;\n    title: string;\n  };\n  calendarId: number;\n  category: string;\n  color:\n    | \"NONE\"\n    | \"LAVENDER\"\n    | \"SAGE\"\n    | \"GRAPE\"\n    | \"FLAMINGO\"\n    | \"BANANA\"\n    | \"TANGERINE\"\n    | \"PEACOCK\"\n    | \"GRAPHITE\"\n    | \"BLUEBERRY\"\n    | \"BASIL\"\n    | \"TOMATO\";\n  conferenceCall: boolean;\n  etag: string;\n  eventEnd: string;\n  eventId: string;\n  eventStart: string;\n  free: boolean;\n  key: string;\n  numAttendees: number;\n  onlineMeetingUrl: string;\n  organizer: string;\n  personalSync: boolean;\n  private: boolean;\n  public: boolean;\n  published: boolean;\n  reclaimEventType: string;\n  reclaimManaged: boolean;\n  recurring: boolean;\n  recurringException: boolean;\n  recurringInstance: boolean;\n  requiresTravel: boolean;\n  rsvpStatus: EventResponseStatusType;\n  scoredType: string;\n  status: string;\n  subType: string;\n  timeChunks: number;\n  title: string;\n  titleSeenByOthers: string;\n  type: string;\n  underAssistControl: boolean;\n  updated: string;\n  version: string;\n}\n","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:45:13.804Z]: question_start
INFO [2023-11-02T11:45:13.804Z]: {"prompt":"export enum ReclaimEventTypeEnum {\n  USER = \"USER\",\n  SYNC = \"SYNC\",\n  HABITASSIGNMENT = \"HABIT_ASSIGNMENT\",\n  ONEONONEASSIGNMENT = \"ONE_ON_ONE_ASSIGNMENT\",\n  TASKASSIGNMENT = \"TASK_ASSIGNMENT\",\n  CONFBUFFER = \"CONF_BUFFER\",\n  TRAVELBUFFER = \"TRAVEL_BUFFER\",\n  SCHEDULINGLINKMEETING = \"SCHEDULING_LINK_MEETING\",\n  UNKNOWN = \"UNKNOWN\",\n}\n\nexport enum EventResponseStatusEnum {\n  None = \"None\",\n  Organizer = \"Organizer\",\n  Accepted = \"Accepted\",\n  Declined = \"Declined\",\n  TentativelyAccepted = \"TentativelyAccepted\",\n  NotResponded = \"NotResponded\",\n}\n\nexport type EventResponseStatusType = `${EventResponseStatusEnum}`;\n\nexport type ReclaimEventType = `${ReclaimEventTypeEnum}`;\n\nexport enum AssistType {\n  TASK = \"TASK\",\n  CUSTOMDAILY = \"CUSTOM_DAILY\",\n  CATCHUPAM = \"CATCHUP_AM\",\n  CATCHUPPM = \"CATCHUP_PM\",\n  LUNCH = \"LUNCH\",\n  FOCUS = \"FOCUS\",\n  TRAVELPRE = \"TRAVEL_PRE\",\n  TRAVELPOST = \"TRAVEL_POST\",\n  CONBUF = \"CONBUF\",\n}\n\nexport enum AssistStatus {\n  CONTROLLED = \"CONTROLLED\",\n  RELEASED = \"RELEASED\",\n  ARCHIVED = \"ARCHIVED\",\n}\n\nexport enum LockState {\n  MANUALLYLOCKED = \"MANUALLY_LOCKED\",\n  ADJUSTED = \"ADJUSTED\",\n  UPCOMINGWINDOW = \"UPCOMING_WINDOW\",\n  MANUALLYUNLOCKED = \"MANUALLY_UNLOCKED\",\n  DELETED = \"DELETED\",\n  DECLINED = \"DECLINED\",\n  INTHEPAST = \"IN_THE_PAST\",\n}\n\nexport interface AssistPolicyOverride {\n  windowStart: string;\n  idealTime: string;\n  windowEnd: string;\n  durationMin: number;\n  durationMax: number;\n  forceDefend: boolean;\n}\n\nexport enum RecurringAssignmentType {\n  ONEONONE = \"ONE_ON_ONE\",\n  DAILYHABIT = \"DAILY_HABIT\",\n  TASK = \"TASK\",\n}\n\nexport interface AssistDetails {\n  type?: AssistType;\n  customHabit?: boolean;\n  habitOrTask?: boolean;\n  task?: boolean;\n  conferenceBuffer?: boolean;\n  status?: AssistStatus;\n\n  /** The source event id for a travel assist event. */\n  travelNewEventId?: string | null;\n\n  /** The source event id for a conference (decompression time) event. */\n  conferenceEventId?: string | null;\n  lastControlledUpdate?: string;\n  lastControlledHash?: number;\n  defended?: boolean;\n  pinned?: boolean;\n  lockState?: LockState | null;\n  dailyHabitId?: number | null;\n  taskId?: number | null;\n  taskIndex?: number | null;\n  policyOverride?: AssistPolicyOverride | null;\n  lastManualAdjustment?: string;\n  recurringAssignmentType?: RecurringAssignmentType;\n  eventType?: ReclaimEventType;\n  assistReferenceValid?: boolean;\n}\n\nexport interface Event {\n  allocatedTimeChunks: number;\n  assist?: AssistDetails;\n  sourceDetails?: {\n    calendarId: number;\n    eventId: string;\n    etag: string;\n    writable: boolean;\n    eventKey: string;\n    base64Id: string;\n    url: string;\n    title: string;\n  };\n  calendarId: number;\n  category: string;\n  color:\n    | \"NONE\"\n    | \"LAVENDER\"\n    | \"SAGE\"\n    | \"GRAPE\"\n    | \"FLAMINGO\"\n    | \"BANANA\"\n    | \"TANGERINE\"\n    | \"PEACOCK\"\n    | \"GRAPHITE\"\n    | \"BLUEBERRY\"\n    | \"BASIL\"\n    | \"TOMATO\";\n  conferenceCall: boolean;\n  etag: string;\n  eventEnd: string;\n  eventId: string;\n  eventStart: string;\n  free: boolean;\n  key: string;\n  numAttendees: number;\n  onlineMeetingUrl: string;\n  organizer: string;\n  personalSync: boolean;\n  private: boolean;\n  public: boolean;\n  published: boolean;\n  reclaimEventType: string;\n  reclaimManaged: boolean;\n  recurring: boolean;\n  recurringException: boolean;\n  recurringInstance: boolean;\n  requiresTravel: boolean;\n  rsvpStatus: EventResponseStatusType;\n  scoredType: string;\n  status: string;\n  subType: string;\n  timeChunks: number;\n  title: string;\n  titleSeenByOthers: string;\n  type: string;\n  underAssistControl: boolean;\n  updated: string;\n  version: string;\n}\n\nexport type TaskStatus = \"NEW\" | \"SCHEDULED\" | \"IN_PROGRESS\" | \"COMPLETE\" | \"CANCELLED\" | \"ARCHIVED\";\n\nexport interface Task {\n  id: number;\n  title: string;\n  notes: string;\n  eventCategory: string;\n  eventSubType: string;\n  status: TaskStatus;\n  timeChunksRequired: number;\n  timeChunksSpent: number;\n  timeChunksRemaining: number;\n  minChunkSize: number;\n  maxChunkSize: number;\n  alwaysPrivate: boolean;\n  deleted: boolean;\n  index: number;\n  due: string;\n  created: string;\n  updated: string;\n  finished: string;\n  snoozeUntil: string;\n  adjusted: boolean;\n  atRisk: boolean;\n  priority: string;\n  onDeck: boolean;\n  instances: Array<{\n    taskId: number;\n    eventId: string;\n    eventKey: string;\n    status: string;\n    start: string;\n    end: string;\n    index: number;\n    pinned: boolean;\n  }>;\n  timeSchemeId: string;\n  type: string;\n  recurringAssignmentType: string;\n}\n\n\nWhen loadevents is called inside of mycalendar, it should check if a task is scheduled, if yes it should add 30 minutes to it","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:45:32.572Z]: question_success
INFO [2023-11-02T11:45:32.572Z]: {"prompt":"export enum ReclaimEventTypeEnum {\n  USER = \"USER\",\n  SYNC = \"SYNC\",\n  HABITASSIGNMENT = \"HABIT_ASSIGNMENT\",\n  ONEONONEASSIGNMENT = \"ONE_ON_ONE_ASSIGNMENT\",\n  TASKASSIGNMENT = \"TASK_ASSIGNMENT\",\n  CONFBUFFER = \"CONF_BUFFER\",\n  TRAVELBUFFER = \"TRAVEL_BUFFER\",\n  SCHEDULINGLINKMEETING = \"SCHEDULING_LINK_MEETING\",\n  UNKNOWN = \"UNKNOWN\",\n}\n\nexport enum EventResponseStatusEnum {\n  None = \"None\",\n  Organizer = \"Organizer\",\n  Accepted = \"Accepted\",\n  Declined = \"Declined\",\n  TentativelyAccepted = \"TentativelyAccepted\",\n  NotResponded = \"NotResponded\",\n}\n\nexport type EventResponseStatusType = `${EventResponseStatusEnum}`;\n\nexport type ReclaimEventType = `${ReclaimEventTypeEnum}`;\n\nexport enum AssistType {\n  TASK = \"TASK\",\n  CUSTOMDAILY = \"CUSTOM_DAILY\",\n  CATCHUPAM = \"CATCHUP_AM\",\n  CATCHUPPM = \"CATCHUP_PM\",\n  LUNCH = \"LUNCH\",\n  FOCUS = \"FOCUS\",\n  TRAVELPRE = \"TRAVEL_PRE\",\n  TRAVELPOST = \"TRAVEL_POST\",\n  CONBUF = \"CONBUF\",\n}\n\nexport enum AssistStatus {\n  CONTROLLED = \"CONTROLLED\",\n  RELEASED = \"RELEASED\",\n  ARCHIVED = \"ARCHIVED\",\n}\n\nexport enum LockState {\n  MANUALLYLOCKED = \"MANUALLY_LOCKED\",\n  ADJUSTED = \"ADJUSTED\",\n  UPCOMINGWINDOW = \"UPCOMING_WINDOW\",\n  MANUALLYUNLOCKED = \"MANUALLY_UNLOCKED\",\n  DELETED = \"DELETED\",\n  DECLINED = \"DECLINED\",\n  INTHEPAST = \"IN_THE_PAST\",\n}\n\nexport interface AssistPolicyOverride {\n  windowStart: string;\n  idealTime: string;\n  windowEnd: string;\n  durationMin: number;\n  durationMax: number;\n  forceDefend: boolean;\n}\n\nexport enum RecurringAssignmentType {\n  ONEONONE = \"ONE_ON_ONE\",\n  DAILYHABIT = \"DAILY_HABIT\",\n  TASK = \"TASK\",\n}\n\nexport interface AssistDetails {\n  type?: AssistType;\n  customHabit?: boolean;\n  habitOrTask?: boolean;\n  task?: boolean;\n  conferenceBuffer?: boolean;\n  status?: AssistStatus;\n\n  /** The source event id for a travel assist event. */\n  travelNewEventId?: string | null;\n\n  /** The source event id for a conference (decompression time) event. */\n  conferenceEventId?: string | null;\n  lastControlledUpdate?: string;\n  lastControlledHash?: number;\n  defended?: boolean;\n  pinned?: boolean;\n  lockState?: LockState | null;\n  dailyHabitId?: number | null;\n  taskId?: number | null;\n  taskIndex?: number | null;\n  policyOverride?: AssistPolicyOverride | null;\n  lastManualAdjustment?: string;\n  recurringAssignmentType?: RecurringAssignmentType;\n  eventType?: ReclaimEventType;\n  assistReferenceValid?: boolean;\n}\n\nexport interface Event {\n  allocatedTimeChunks: number;\n  assist?: AssistDetails;\n  sourceDetails?: {\n    calendarId: number;\n    eventId: string;\n    etag: string;\n    writable: boolean;\n    eventKey: string;\n    base64Id: string;\n    url: string;\n    title: string;\n  };\n  calendarId: number;\n  category: string;\n  color:\n    | \"NONE\"\n    | \"LAVENDER\"\n    | \"SAGE\"\n    | \"GRAPE\"\n    | \"FLAMINGO\"\n    | \"BANANA\"\n    | \"TANGERINE\"\n    | \"PEACOCK\"\n    | \"GRAPHITE\"\n    | \"BLUEBERRY\"\n    | \"BASIL\"\n    | \"TOMATO\";\n  conferenceCall: boolean;\n  etag: string;\n  eventEnd: string;\n  eventId: string;\n  eventStart: string;\n  free: boolean;\n  key: string;\n  numAttendees: number;\n  onlineMeetingUrl: string;\n  organizer: string;\n  personalSync: boolean;\n  private: boolean;\n  public: boolean;\n  published: boolean;\n  reclaimEventType: string;\n  reclaimManaged: boolean;\n  recurring: boolean;\n  recurringException: boolean;\n  recurringInstance: boolean;\n  requiresTravel: boolean;\n  rsvpStatus: EventResponseStatusType;\n  scoredType: string;\n  status: string;\n  subType: string;\n  timeChunks: number;\n  title: string;\n  titleSeenByOthers: string;\n  type: string;\n  underAssistControl: boolean;\n  updated: string;\n  version: string;\n}\n\nexport type TaskStatus = \"NEW\" | \"SCHEDULED\" | \"IN_PROGRESS\" | \"COMPLETE\" | \"CANCELLED\" | \"ARCHIVED\";\n\nexport interface Task {\n  id: number;\n  title: string;\n  notes: string;\n  eventCategory: string;\n  eventSubType: string;\n  status: TaskStatus;\n  timeChunksRequired: number;\n  timeChunksSpent: number;\n  timeChunksRemaining: number;\n  minChunkSize: number;\n  maxChunkSize: number;\n  alwaysPrivate: boolean;\n  deleted: boolean;\n  index: number;\n  due: string;\n  created: string;\n  updated: string;\n  finished: string;\n  snoozeUntil: string;\n  adjusted: boolean;\n  atRisk: boolean;\n  priority: string;\n  onDeck: boolean;\n  instances: Array<{\n    taskId: number;\n    eventId: string;\n    eventKey: string;\n    status: string;\n    start: string;\n    end: string;\n    index: number;\n    pinned: boolean;\n  }>;\n  timeSchemeId: string;\n  type: string;\n  recurringAssignmentType: string;\n}\n\n\nWhen loadevents is called inside of mycalendar, it should check if a task is scheduled, if yes it should add 30 minutes to it","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:46:54.441Z]: question_start
INFO [2023-11-02T11:46:54.442Z]: {"prompt":"When loadevents is called inside of mycalendar, it should check if a task is scheduled, if yes it should add 30 minutes to it using the addtime function from usetasks","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:46:55.670Z]: tool_selected
INFO [2023-11-02T11:46:55.670Z]: {"tool":"understand","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:47:38.977Z]: question_success
INFO [2023-11-02T11:47:38.978Z]: {"prompt":"When loadevents is called inside of mycalendar, it should check if a task is scheduled, if yes it should add 30 minutes to it using the addtime function from usetasks","agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:56:22.744Z]: project_reinitialize_start
INFO [2023-11-02T11:56:22.744Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:56:24.171Z]: project_reinitialize_success
INFO [2023-11-02T11:56:24.172Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:58:19.267Z]: project_reinitialize_start
INFO [2023-11-02T11:58:19.267Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:58:20.576Z]: project_reinitialize_success
INFO [2023-11-02T11:58:20.577Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:58:48.073Z]: project_reinitialize_start
INFO [2023-11-02T11:58:48.073Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T11:58:49.383Z]: project_reinitialize_success
INFO [2023-11-02T11:58:49.383Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:04:51.583Z]: project_reinitialize_start
INFO [2023-11-02T12:04:51.583Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:04:53.054Z]: project_reinitialize_success
INFO [2023-11-02T12:04:53.055Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:05:40.250Z]: project_reinitialize_start
INFO [2023-11-02T12:05:40.250Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:05:41.736Z]: project_reinitialize_success
INFO [2023-11-02T12:05:41.737Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:06:00.184Z]: project_reinitialize_start
INFO [2023-11-02T12:06:00.184Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:06:01.174Z]: project_reinitialize_success
INFO [2023-11-02T12:06:01.174Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:06:10.255Z]: project_reinitialize_start
INFO [2023-11-02T12:06:10.255Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:06:11.236Z]: project_reinitialize_success
INFO [2023-11-02T12:06:11.237Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:09:09.709Z]: project_reinitialize_start
INFO [2023-11-02T12:09:09.709Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:09:10.931Z]: project_reinitialize_success
INFO [2023-11-02T12:09:10.931Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:11:58.918Z]: project_reinitialize_start
INFO [2023-11-02T12:11:58.919Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:11:59.944Z]: project_reinitialize_success
INFO [2023-11-02T12:11:59.945Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:15:14.706Z]: project_reinitialize_start
INFO [2023-11-02T12:15:14.706Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:15:15.856Z]: project_reinitialize_success
INFO [2023-11-02T12:15:15.857Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:16:19.089Z]: project_reinitialize_start
INFO [2023-11-02T12:16:19.090Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:16:19.130Z]: project_reinitialize_success
INFO [2023-11-02T12:16:19.130Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:16:59.928Z]: project_reinitialize_start
INFO [2023-11-02T12:16:59.928Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:17:01.003Z]: project_reinitialize_success
INFO [2023-11-02T12:17:01.003Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:17:32.309Z]: project_reinitialize_start
INFO [2023-11-02T12:17:32.309Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:17:33.702Z]: project_reinitialize_success
INFO [2023-11-02T12:17:33.703Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:18:01.556Z]: project_reinitialize_start
INFO [2023-11-02T12:18:01.556Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:18:02.475Z]: project_reinitialize_success
INFO [2023-11-02T12:18:02.476Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:20:55.975Z]: project_reinitialize_start
INFO [2023-11-02T12:20:55.975Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:20:56.954Z]: project_reinitialize_success
INFO [2023-11-02T12:20:56.954Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:24:03.991Z]: project_reinitialize_start
INFO [2023-11-02T12:24:03.991Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:24:05.265Z]: project_reinitialize_success
INFO [2023-11-02T12:24:05.265Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:26:24.785Z]: project_reinitialize_start
INFO [2023-11-02T12:26:24.786Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:26:25.902Z]: project_reinitialize_success
INFO [2023-11-02T12:26:25.902Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:26:43.945Z]: project_reinitialize_start
INFO [2023-11-02T12:26:43.946Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:26:45.213Z]: project_reinitialize_success
INFO [2023-11-02T12:26:45.213Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:27:02.865Z]: project_reinitialize_start
INFO [2023-11-02T12:27:02.865Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:27:03.940Z]: project_reinitialize_success
INFO [2023-11-02T12:27:03.940Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:35:06.273Z]: project_reinitialize_start
INFO [2023-11-02T12:35:06.274Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:35:08.315Z]: project_reinitialize_success
INFO [2023-11-02T12:35:08.317Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics"}
INFO [2023-11-02T12:49:09.543Z]: opened
INFO [2023-11-02T12:49:09.543Z]: {"agent":"cosine-vscode","version":"1.0.7","package":"@cosine/analytics","token":"1803ee20efed77dfecbf705fb8dc4c18","mp_lib":"node","$lib_version":"0.17.0"}